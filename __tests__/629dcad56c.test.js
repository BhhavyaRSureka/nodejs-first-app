// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeMochaTest using AI Type Open AI and AI Model gpt-4-1106-preview


ROOST_TEST_HASH=14fde329b7

*/

// ********RoostGPT********
// Jest Mongoose Connection Test Case

// mongooseConnection.test.js

const mongoose = require("mongoose");
const { jest } = require("@jest/globals");

describe("Mongoose Connection", () => {
  let originalConsole; // Save the original console object

  beforeAll(() => {
    originalConsole = console; // Save the original console object
    console.log = jest.fn(); // Mock console.log
  });

  afterAll(() => {
    console = originalConsole; // Restore the original console object
    mongoose.connection.close(); // Close the Mongoose connection if it was opened
  });

  test("Successfully connects to the database", async () => {
    const mongooseConnectSpy = jest
      .spyOn(mongoose, "connect")
      .mockResolvedValueOnce("Connected");

    await mongoose.connect("mongodb://127.0.0.1:27017", {
      dbName: "backend"
    });

    expect(mongooseConnectSpy).toHaveBeenCalledWith(
      "mongodb://127.0.0.1:27017",
      { dbName: "backend" }
    );
    expect(console.log).toHaveBeenCalledWith("Database Connected");

    mongooseConnectSpy.mockRestore();
  });

  test("Fails to connect to the database", async () => {
    const errorMessage = "Failed to connect to the database";
    const mongooseConnectSpy = jest
      .spyOn(mongoose, "connect")
      .mockRejectedValueOnce(new Error(errorMessage));

    await expect(
      mongoose.connect("mongodb://127.0.0.1:27017", {
        dbName: "backend"
      })
    ).rejects.toThrow(errorMessage);

    mongooseConnectSpy.mockRestore();
  });
});

