// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeMochaTest using AI Type Open AI and AI Model gpt-4-1106-preview


ROOST_TEST_HASH=9ac90d269a

*/

// ********RoostGPT********
import express from 'express';
import { createServer } from 'http';

// Assuming the source file is in the parent directory of __tests__
// Mock the server module to prevent actual server start
jest.mock('../index', () => {
  const originalModule = jest.requireActual('../index');
  return {
    __esModule: true, // Use it when dealing with esModules
    ...originalModule,
    server: {
      address: jest.fn().mockReturnValue({ port: 5000 }),
      close: jest.fn(),
    }
  };
});

// Import with server mocked
import { server } from '../index';

describe('Server initialization', () => {
  let consoleSpy;

  beforeAll(() => {
    // Supress console output during tests to avoid clutter
    consoleSpy = jest.spyOn(console, 'log').mockImplementation(() => {});
  });

  afterAll(() => {
    // Restore console output after tests
    consoleSpy.mockRestore();
  });

  test('Server should start correctly on port 5000', () => {
    expect(server.address().port).toBe(5000);
  });

  test("Server should log 'Server is working' message on start", () => {
    expect(consoleSpy).toHaveBeenCalledWith('Server is working');
  });
  
  // If there are any cleanup tasks to be done after the server has been used, do them here
  afterEach(() => {
    server.close();
  });
});

